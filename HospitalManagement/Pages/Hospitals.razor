@page "/hospitals"

<PageTitle>Hospitals</PageTitle>
<div class="container">
    <div class="row justify-content-md-left">
        <div class="col col-md-auto mt-auto mb-auto">
            <h1>Hospitals</h1>
        </div>
        <div class="col col-md-auto mt-auto mb-auto">
            <button class="btn btn-primary" @onclick="StartAdding">Add <i class="bi bi-plus-circle"></i></button>

        </div>
    </div>
</div>

@using HospitalManagement.Domain.Models;
@using HospitalManagement.Business.Queries;
@using HospitalManagement.Business.Commands;
@using HospitalManagement.Domain.Dto;
@using AutoMapper;

@inject IMapper mapper

@if (showModal)
{
    <div class="modal fade show" tabindex="-1" role="dialog" style="display: block;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add new hospital</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="@(() => { showModal = false; })">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <EditForm Model="@hospitalFormModel" OnValidSubmit="@HandleValidSubmit">
                    <div class="modal-body">
                        <div class="form-group">
                            <div class="row">
                                <div class="col col-sm-5 mt-auto mb-auto">
                                    <label for="inputHospitalName">Hospital name</label>
                                </div>
                                <div class="col col-sm-6 mt-auto mb-auto">
                                    <InputText class="form-control" id="inputHospitalName" placeholder="Hospital name" @bind-Value="hospitalFormModel.Name" />
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col col-sm-5 mt-auto mb-auto">
                                    <label for="inputHospitalDescription">Hospital description</label>
                                </div>
                                <div class="col col-sm-6 mt-auto mb-auto">
                                    <InputText class="form-control" id="inputHospitalDescription" placeholder="Hospital description" @bind-Value="hospitalFormModel.Description" />
                                </div>
                            </div>
                            <hr />
                            <div class="row mt-2">
                                <label class="font-weight-bold"><b>Address</b></label>
                            </div>
                            <div class="row mt-2">
                                <div class="col col-sm-5 mt-auto mb-auto">
                                    <label for="inputHospitalZipcode">Zip Code:</label>
                                </div>
                                <div class="col col-sm-6 mt-auto mb-auto">
                                    <InputText class="form-control" id="inputHospitalZipcode" placeholder="Hospital zipcode" @bind-Value="hospitalFormModel.ZipCode" />

                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col col-sm-5 mt-auto mb-auto">
                                    <label for="inputHospitalState">State:</label>
                                </div>
                                <div class="col col-sm-6 mt-auto mb-auto">
                                    <InputText class="form-control" id="inputHospitalState" placeholder="Hospital state" @bind-Value="hospitalFormModel.State" />
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col col-sm-5 mt-auto mb-auto">
                                    <label for="inputHospitalCity">Zip City:</label>
                                </div>
                                <div class="col col-sm-6 mt-auto mb-auto">
                                    <InputText class="form-control" id="inputHospitalCity" placeholder="Hospital city" @bind-Value="hospitalFormModel.City" />
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col col-sm-5 mt-auto mb-auto">
                                    <label for="inputHospitalAddressLine1">Address Line 1:</label>
                                </div>
                                <div class="col col-sm-6 mt-auto mb-auto">
                                    <InputText class="form-control" id="inputHospitalAddressLine1" placeholder="Address Line 1" @bind-Value="hospitalFormModel.AddressLine1" />
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col col-sm-8 mt-auto mb-auto">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary />
                                    @if(!string.IsNullOrEmpty(error)) {
                                    <div class="alert alert-danger" >
                                        @error
                                    </div>
                                    }
                                   </div>
                            </div>
                        </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Add hospital</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="@(() => { showModal = false; })">Close</button>
                    </div>
                        </div>
                </EditForm>
            </div>
        </div>
    </div>
}

@if (hospitalsList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Description</th>
                <th scope="col">Address</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var hospital in hospitalsList)
                {
                <tr>
                    <td>@hospital.Name</td>
                    <td>@hospital.Description</td>
                    <td>@hospital.Address.ToString()</td>
                </tr>
                }
        </tbody>
    </table>
}

@code {
    bool showModal = false;
    HospitalFormModel hospitalFormModel;
    string error = "";

    IEnumerable<HospitalData>? hospitalsList;

    protected override async Task OnInitializedAsync()
    {
        hospitalsList = await Mediator.Send(new GetAllHospitals());
    }

    private void StartAdding()
    {
        hospitalFormModel = new HospitalFormModel();
        showModal = true;
    }

    private async Task HandleValidSubmit()
    {
        var hospital = mapper.Map<HospitalFormModel, HospitalData>(hospitalFormModel);
        hospital.Address = mapper.Map<HospitalFormModel, AddressData>(hospitalFormModel);

        var addHospital = new AddHospital
        {
            HospitalData = hospital
        };
        var result = await Mediator.Send(addHospital);
        if (result)
        {
            hospitalsList = await Mediator.Send(new GetAllHospitals());
            showModal = false;

        } else
        {
            error = "There was a problem adding hospital please try again or contact support";
        }
    }
}

